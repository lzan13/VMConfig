### set custom shell path
export VMSHELL="$HOME/.vmconfig/Unix"
export PATH=$PATH:$VMSHELL/bin

### set jetbarins 脚本环境变量
export JetBrains="$HOME/Develop/Tools/JetBrains/Scripts"
export PATH=$PATH:$JetBrains

### set jadx path
# export JADX="$HOME/Develop/Tools/jadx"
# export PATH=$PATH:$JADX/bin

# ### set jdk path
# export JAVA_HOME="/Users/edy/Develop/Tools/JetBrains/Applications/Android\ Studio.app/Contents/jbr/Contents/Home"
# export JAVA_HOME="/Users/edy/Develop/SDK/Java/jdk1.8/Contents/Home"
export JAVA_HOME="/Users/edy/Develop/SDK/Java/jdk17/Contents/Home"
export PATH=$PATH:$JAVA_HOME/bin


### set Android sdk path
export ANDROID_SDK="$HOME/Develop/SDK/Android"
export PATH=$PATH:$ANDROID_SDK:$ANDROID_SDK/platform-tools:$ANDROID_SDK/tools:$ANDROID_SDK/build-tools/34.0.0


### set Android ndk path
export ANDROID_NDK="$HOME/Develop/SDK/Android/ndk-bundle"
export PATH=$PATH:$ANDROID_NDK


### set Flutter path
export FLUTTER="$HOME/Develop/SDK/Flutter/flutter"
export PATH=$PATH:$FLUTTER/bin
export PATH=$PATH:$FLUTTER/bin/cache/dart-sdk/bin


### set Flutter china mirror image
### publish packages need unset this
export PUB_HOSTED_URL=https://pub.flutter-io.cn
export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn

### set python path
export PYTHON_HOME=/Library/Frameworks/Python.framework/Versions/3.9
export PATH=$PATH:$PYTHON/bin

### set homebrew  
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles

### nvm path
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

### repo git source
export REPO_URL="https://mirrors.tuna.tsinghua.edu.cn/git/git-repo/"

###############################################################
# 手动安装 ruby 配置
# By default, binaries installed by gem will be placed into:
#   /usr/local/lib/ruby/gems/3.3.0/bin

# You may want to add this to your PATH.

# ruby is keg-only, which means it was not symlinked into /usr/local,
# because macOS already provides this software and installing another version in
# parallel can cause all kinds of trouble.

# If you need to have ruby first in your PATH, run:
#   echo 'export PATH="/usr/local/opt/ruby/bin:$PATH"' >> ~/.zshrc

# For compilers to find ruby you may need to set:
#   export LDFLAGS="-L/usr/local/opt/ruby/lib"
#   export CPPFLAGS="-I/usr/local/opt/ruby/include"

export PATH="/usr/local/opt/ruby/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/ruby/lib"
export CPPFLAGS="-I/usr/local/opt/ruby/include"